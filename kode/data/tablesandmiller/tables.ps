%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: thesis.dvi
%%CreationDate: Tue Nov 13 13:37:33 2007
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR12 CMR10 CMSY8 CMR8
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -pp 97 -pp 106 thesis.dvi -o tables.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2007.11.06:1554
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 66 /B put
dup 67 /C put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99C5C63F2AF354D6D558EBE1528C44E2040F3412C67F1A7
28E5753F035E5BEA74E282B3BC4B1D6D30A3B7C7C23B7B83DD252E4A358320BC
9F127F0DCE2ABA2728E04EF38E58930E37654FDD73BF47D39D1E8727E9DDBA63
B63D7F1FB3806B69940F4159F723C18E89E9F85BB44B66FCF9A4BBFD76C673CC
A729412DD783FFF4C30AF163EF2E273FCB099FF6A42B59D893C1BAA30DD1DD0A
CEA39CFAA5E49001ACAE4F5C9E891A977437EE32D60741C7A175FEABDA80DAB4
1BF73EEE203D36CDFD4F1389C10F4F554EC270C3E559AF40AD4B8483AC051F54
CBC8A1EAE07099B16387554E948ED744BEC8FC75DD015D2DAE1629CFAC20E920
163F52FDDE3DA8E9FD9A8AE38014C2A8368C9573520C06A1CFFA00A0A0B1DECA
848078006E46E015111E360A1EEA6551076B53AF9F34FFDE33CFB211C49FE7A5
3D7D807E6272CD38C921577A002AF69C367F0DD4D73689183798A4A260509567
2AF4C4825E59285A7C4DE5321225C6E2E208E1AB4D6C20BFAA79BBD4FA6660E6
2812CD7C54DBA9F8C477B7364B864D0E5BAB6E6D9AF1DE6CDD1947490DBE2D63
6C5891B1FCE4444ABF03DBED8E55CF8FACE007A5B7F7FC82D1B936CED7A3B4CA
F6C7E33DFEAF8ED7141E23AE50575F9A2C1CB7E0F12CB0CB1EE425FA28690A0F
A2A6AA2D5871519431A85D597A49335CC40D3862EBAF5CC7B859969038532BA2
0061EAD2ABA5D9AC9EDBEB49A18801A8B79385676F12A70C8D4F8AA179B0D156
3E7E339E938297F9403643F1B3D43AF56BF9E558EFD356CF7152DF32768A9E5A
8989EE0E26C392220832FB00CBC1F394DECBE1E9A1FB8864A9A1F1576E5F0239
88EBDDA814C00FCC648A26C75600D22E6C0CEDB7D030944E7454D57F44B39113
ADA47E36F3EB0911830065EF03390CEA736E3F09D20B6D10371E9BD19A71244F
F9904457BAE924543E135D43AADD5AEE4749C884D4B7FE68A073AD0788C9F699
187671DA23E50B6D68148DE8830830C374D6FD6BC149DE1D1DC45416405C9649
C7C829616F5B528DEAE26D2FAEEAD0F2DC558BE87704AB6616FC860CCAA34022
173FDB52AA4EA92338DFEFD11A3BEC1314F5CEE86F9EDEE67CD724FF5154E359
398F2D23EB9C32E9D663C5F273E09C131D1EC6B62E11ABA6CE429C4F76EBEE83
C219003FF18F738D2A61D1549581B9FC346A50372C582171A4AF21CEED3C3DC4
BB549451290E98F4387092C45E082F5513A4F6AD3BFD06A1308C2CF21540EEC6
8747915A3F46DC93E9B8F42D9022DB94C3D5EE98B5990C09C1EF5398E2529070
45E9984AD71187BE786C12C1A5ACE30573556D2B2AE6F34E9D792089409A0ECF
4003FE516DF68D997A6589CFED34EE928D42FA3433D1DDC5DFFEFFF8024A22BA
303F8A8A486671FD9EFC0038C4BE45E7DA39FDA4B0BCA75E6966F116D0E591D9
F3B2C87E54BD8801187B5347AC5E589CD33C9CD09792BCBEA379C3455113C7A9
5CC820104953868D0CE3D4F20C1BD46974E47EF3FA6F59C0E32CD3EBD4AD5345
FC561FEDD325372CC49E8481DC7546D5E10F13CD1F9EFFC2C8F90047E2B4DEBD
C1D36DB438DED42ACEC161EDB5AE0EA608E69EA6EA585920B582B5749A45E4A7
47483B5FF073993CA531CED6BD889D412B89E24651472C6897517FC29DA59179
359044FC234738C01FA17D9F1716303E0F7E27B76F2AAE425FE0AB04853D56A5
FDED01D8FEA2D71270F337CD7C0EB289DE4F1152E6C4681239AD2E3173CFC223
307C838480A3552504D72871050C170396968AD3D82D902AD98CB94DF654E845
4142C44CC80F1D96932F6E2F55D46371BDCF277B3A3657201C96C098A9C98797
1BB467A976B2F615060C3EE1D9416A2F996ABEF55C2516B4BB38FFD2679A0002
A31CB3EA708D45B8C5F52F7098F50636E90D9623B9197E905195D5830BB03544
6DBF00AD6DCD116FEB7E63BB66502BE932A71D80205229FE693D2911E1BFE1DB
61F2904F006CCABC1B78F6704805F1EE9E7C8E2BF5C610FA862274989C7B30AC
6318CFED54BE0FDF1309E631D6AB6DFA2324F122CA6E61FA462F1E6124D48BFD
887B51F0B8909F1E7C2033DCEFB7EEA98BC0CA4795E69D83BCD6A3266828E8B4
A012FEEC9CDED3D8E39407966C86C7E8A71171ED9DC1CFFAE09E9C200EF424AE
AA9B35F1778E797DE04A182BCE901DC70395E7336CA9A64D77D6C1CBB2691D3A
4BD9D0DECBA8019DAD6BB64D6A2141EBA5E1A3A17627F7602B5B28F9E8F25808
AC5FEB7B571192B05DD22214B564ECD5FE76F67ECE97C671FA877A01F25EAD5A
270A085E68AF2CD00159585FD63153FBA2313E05B0A1986A7F45582CF7A898F1
C47FF55AC309AF4BCE49A8539DF855CA3B0781A6DA89F75FC9F57877352B11A7
8B8AA181DDF52818FAB4FB7FD0A84193CEFE8CCEF5255B553E6BAB4AED241CC5
1C258BB417731651B09589A2FCAC4C9FD87982AC06846D49D676C4CB7D81D63C
DCCCD8AC47A01DD566349D85C822C8464682EF1FBBBCB06DC482AB77C99CB336
DE16AEAC1851EC37C20F1B8E38773BF2BCDDD451E500D45F9A8181E9A5575F05
745C28C38D4C0ADEC28983AF881B4CF07392C5BB5972F337323501BA096BE66B
6641D3BE31B8F797D613B34A9D82F6717FED67364FBF3B2067F02786B0ADE22A
F36B9DD4AD2B96D3C1AF4579541075D33BC99DC1554793199D62D9C4334265C8
6CE4476B1078BCB671F868543482DFEA932DB68C53ADADF236C7466D0405BA61
0D35B6CA371D5D744E1C43EAF66F44D066572EDDA7DBFCC4E97B6BADCBA43A30
ACEF98A52D59FE6A880E2FC79A4F4EB6E5AE715313F4A516A791377B0525D595
F3E810F742B3D9D453C70B3D9A04D284F67A46B2B8740305A1179B3A370BF9EA
596B65E149DE087DFC53D3DFDE3DC0C46EE201E95D15105783F625D4BEC8A3C1
3B4EC2BBD6D22DE08E54F16CCE08D571903ECD60B0F97B5AF0E3633C33C88179
5BA80516846950A050EF4DF3D9FD4AA1608C9F91BAD741825EC57F770895603A
89FE52816021B0855BD36CAF09765120464F5767EC0638B09AEB5A7F6286976E
1C268A4A2AEFBFEB9DEE19046AC9F47000F38D1079F3DB3682B4BB6C0FB9EE8A
68DE7987CBF5DA79D2F392BB8356327439F6CC3246CD4D024FF4CFA12591047A
0D546790D545A98977A40D55E4DE3B3126D0418806B96EFC765477E2111D3A23
BE5E87D55A537F90FDD8B408B28F343BE4A52948D190B765D1A3A6A35537D0F0
8F6BBFD1F0AE521FA69ADA0EB3B2D677BE246AF36A9EA1FE13BF1F96DF1B2020
30BF4A012A3845BBC190BF3067C8D94BED859A3E2AFD2207395A5D5845657B0C
FE21F5982619CC0E2148C8973B9FCDB951C475804486A2391E617136404A78A2
078DBC1DDD53D31833AD5942D5A4766289EE45B20B201384DC6678475C8AD745
31088F725770A2D0133629D0CCA87235D68FF0C646A108423F9E7FC1219D0EC2
BD09D64232BF93B0A661B49C3762E2B0B6789214ADDD1919C208ABC96B0EB2DF
2097B18F619E1ACA924DE4860918DC96A3859BF13D430CC17EEBC64633569D0A
509DCD9F33609FB7C624C22955F956DF0C50308A633E440B69A473A7571434F9
E90F329B01686E226EE7A5FEE5AF4EA1AEA9F165D1C574062EF9F51F0B92E86A
A72D068C494F29C31036865F40C3AF69011B1F83A2DB269E00D92D18A597CC97
E91419880F60B25AE82CCE0C511645D1F453EC1698B1746823ACA0E3B69D2521
BBDC183B8AE2D48341DA4A36BF9A2CA16619BCAF14B530D440C68464E9EBABD7
66058C48B959D38DBB55E08FAAB386FD4B674FBBAC4FA6DD94510410012D3246
4428C583DB1936911019FAD7603C22F072A0504B07017C79C10B45BB496513C8
3EECCF877475E16486D4C993B88FF8322B5E60813DEB5E5C40FE541A612D3CB1
5237F865DA108AAFD777AC8C34BD1D63A00D83AE6F2B8B09279CEB0832790C25
BBF5A629CFDD687160C5D11B26D999985D56CC46086D445C83FA8707294D315C
6DD635564E1DD54E72A830345B0928946A68CD1AA420D4B5FF1F4C81CA54F84C
0D9CC85CF835E49E35C08ED2C2166BFDA12BB1EDBC9D806360C1CDDC23C502FF
8C718C9206A81E57228582BDA76AFABF0F08CFDA85AE80DCF15D5326C36C59D1
2F47190E744A3DF0B2C5268B459DD7F21004209DCF6611C796665231100FCAA5
ABE912E5EBF384C8F6553EB05CB877BB3E73E48CF50615D74E9B84EC646C8D55
D98B11B5705B27280FD1404FA120D5C0A381807788DB07D1ABD59983099874CB
3FD12EA1334B3080F556FACB5B0FE7744F6C635307F73F1ABA62C26A2341CE89
A93219BAD3897269180B04C4ABC71DB1156F4C0672F832BD1F5203355776E221
3151D658467FDBF08AF55B903B52068C5E4F049ECFE0F2BEC33297E2DFA0D7C7
8470E75CCBEDE95EFBC9720E5C1503D5777A635C5ABC2CCEDA3AE2E11C1291E9
56EE8EDFB623500989972222230AF482DFCAAC62B77B8FD3F09FC9A4FCBA05AC
F43FACA25DF1720B4C25C28152ABA1364E54DB6F36C4EF1BE22E2BEA9E64F91F
EC8B1FCB5E796D5518934F9370B5B4267733E0578F71D38800D1E7BF10B48553
021048FCD2D615C848EEFE4A7B3C82ABF088605442F72FA3BA0932F46C859815
52E990346378E0CB67F8787C52D20E63E893A4D1BD3EC9F0A261C2ED77DBB6AE
D131AE635238BE28A7187159EA129AD08F6D4B1EE559A0E663BF67972A2A19DD
B2364637EFA7C844559CE48796B8666D97B4FF07BE4F647F8E7D6AA78EC020D2
878F58F220F81BE2A151DB7B507186792A420EA6CB20B4CD3506DCD7C7DBC2E9
025FDC99B325A79DE7A53591C88EDF8BF426D2102FED037C0FA310762449774D
282C6403C1A8334197DB67E062C82315CD8D7CAC58ABE4EF4F3E22F4AF8594BC
40A0B0A8E055CE364D4241833A2E7EC795E447208124053E02EBE87578857726
738C955E09A8C464766C6C9BA8ADE7758BB41AA1C06AF2C9ABB125BB59A247AF
8228C640C561C6CD6D082AFB97C0CC3C285CB2C005BC1C1EB122C3EC83634F99
325DAB9D7784B2A489C1735215ECB40FE2F8D569B6243934592B56531804E593
5F3F0C9FE2484C1D8F34F229E134A5353A27F51F3C2E13B6C1AD69E75AE27F1F
4BA7D0A2A488203CAA46628D90C740C5765EBE5D3A0D5464BFDFDBBD2C4880C4
79E1FE4D68B59C34922A4C874877FCD19D13A3DA534DB6C8C22A82FCFC58B58B
2DB26BD6631055C22B48AB3FEAD74E68132E2330E2C676DCBF4D6FE2F1395EB5
65EC18F44C25AC32AFF5A7CE018B38D2043B2DEE5597C4BF8BA1F36689358CCC
1A41A360FF3C1FEA59998EDD07E61E948BF6E0A5739CE486E47F9ACF45D4B845
6DD4E0D59EA0A5FD6066CC83A211BCA2A887C776EEF5FF1286AF99CDACB2D14F
8589687103D39DA6CAFD1F13FB189256B973C76D3DEDE96916BF81394000949A
11CB36CEB28FDEC922EFF895A52756BE88B2B12B557B7E9E9D7BF45461061325
5194AFAB8B7D09249571E669346BC1D9B47D8611C7B591ECA9E764E8451D4049
AEE70BE4C8E77A87864828958988476B99C32CD601BBFEB2AC88F45EE03AB472
5B524B8C1D4DB5176A29903F78F55B970FC6E4AD7D05760421F0663C8F5FC038
4C69324D34BB37B81C60A9A2170138A36F4256CDE03607DE06A6D38E3C7C405B
3285C76559D37514FA6D5C35D5B20CE2AC3E5FAEADFC93BB6D3608109C82E167
8B49B3D3FE4B998EAB587AD751821800335DFCD962CACF0826E0A22E108A68D3
EA3ECC5DB22892EE37E1E84AAC158AE6B53A286825D6339B7B0094C3D3F5E867
746B7F549F20E49AC5D6514E989B798330DAA4E27917027316BD7A86AD34036E
DC657109C79316F258F982831C82CFA0155D803644637B5AC837FF0CA0508A53
A1687BD9F35B46B746AD71F2ECA656A51C035690C8CECC9844A250088227986C
C39BF58034D3CE9EEA976D80529BF2D243523C380E2939B1F7AEF0AD75D2E9BC
ECD35D955F4FB3628527AAB0F52F0F88B50A45B2D0777B461EA1E93B2FC591FE
653C0085DE4D98E6C164ECC7171C5DCFBC7A083D8D8D8B1AAE72F3A82D860CFE
9E65A9619FE09790E5A7FA52BAB54AFECA8C0F7EF75ACCE6E0DDB87314BA018B
8883CF45CCDB21A75B70D21F6E68633EF01C03C94FEDFD2B529A78CC3DA637FB
264BAC1645212E9912D48342DCAE8BFB588F29708EA5F3BD9DBDD64F603EA4D5
D68BDD9CB73FE1CE0895E90790C18053DE884B4B4CED65D1BD2FAF55CCB9426B
8FF708AF11DF3844B837109E89230752154FE325D8CF9DB9FA103A83B1F41694
17247CECAA083EDB6DEEE6592FB855BF94A4AC02E46A887C3D440A935BCEC533
4369BCA87A1034C2998C11DDD28766F42CCE74E841218A526712A2F99452D8F3
CAB4925D254D27822AEA6BDB3484C958965376EF1F55D6AE70FD46C92D9B4DDB
12BA1516B84F6F1611AFC6FF14836FA18949956D0DF82F8FE27E742026FE4AAF
748E7A42B04EA734CE1ABFF2153FC7C70798A86A45600B3A0F8B37A6D17AEE3F
6231F3EE81171E63B33A22749AB4D0E9FA939C273FEE71EB11E606C1A74D8CD4
C13F3A55B9E486B5DCCC8BB57E112263F9FA1A76CB8B415199CEB4EABD43859F
99CC6C4C730A31AC2E65EA70DCADD64FE5B0427B770917A51A687D4ACBA11AC4
7B7E8CE7FF793672588BD4AD6171E7DC437FE6EDBF238A0BC13CF72D1321726B
06CC127DB79AD471599E8D338ABBE8CB2815ADB6418ED12730FD56B9991DF4C4
36D95EB94C18E5CA1FCBEF4D3D53ED9F3803304C6AD70F016BED86A09AF16681
4FF4B43AF4FB52D1FC5B857604ECDC2AFDC97F5443CA12A9E41DD87562E0A04E
5DA2CA7B6F527FF32BBFD5B270F3475FD5496A27E8AB969263EFC8E16C287E95
40BC0795D52667F38FCAC79CAB835D79EA9C62DF217CC03B5F4C873AFE39574D
DAB64F2DE9FC763A4BE0F791927693B329BF8304321BCB62FB3D7F301FEFDA48
0BEB1705EE7AD10936FEB5C678FE0B7412404C392B0F509C18F02015F17E5717
47F524C73AE5A66F436833134150BFD94EC576D3AFE6952A01696F21D7DE59A5
5B46528B3E21C8FDD947982AE81E19FF24762ADE74C61DDA7BBE0CB634DFC1E8
B3AD619A418F41A4EF96692D1EF9C6ABD085B2603DE2A51EC2825BA01DCA9FF4
88872356D4F54AC1B1DAC626CDAB807CB2D7FEB18306E4676BC83A35D0BCBB49
E045EB5FE73E1FA08C5239EC942EC747E464946DEA2D99BA8D0B90ACC4E9FD96
170D40A82DA387CE58FC36E7EF54C943CEB3308DD337FAB7D224B4E247E66BC4
1432CF296B375E2CDA09FE5DE1CF10405B2C2BF82D13C04306BC2C0A776FE589
52D0A9A3CB43DDFC20BB73BD2FD041C5FC25F84097DE76E22BCD664C40FF5F61
32960AC53A8822B01B186A9639C9191F64A40B2780118CFFC01679747F980A4D
F9BC759A6BB550B1AE0D18C7D2B1D0CA5593BA9C257EB7E8841962F93843BEE9
DDC07833BE6AED73069F69BF7A41CFB074F1A4E5165A97A7DB4E6B963B97B441
F74A0CBD695E262814F0FAF8E1D73A706CF155FF029C7A59884E9C1BCA2DA5A4
6A32E971FD0E123BB9CA5D232417DA126150A18D2D29A3753DF4D6AC8CBA9DD0
056DDEC418810E0CB3C7B7EA641D317ACC47E879556AC68F43AF279EA4029872
7B2A4878E181448E451075F183DFC1987C59D403D57AF1D8EE23BA48684D5644
F8DD108116C5B374ED00A20E914A25FE048CA5867613F9A9CFDC108C4ADAE954
1D6F0D6D018E0C21CCCE2888A6E2436CD8F47938152A7105905C2CACD93B4D3C
56451ED5C7B95EDAB108A0BC4E61870377527FC94169CAD4023375E52A374C37
7D5384A688BD18527F3BE7880F1F65D61EF4865E9C45B8A0AF9B2CF1F41E4509
7209FC662CAE31556AA7E30D14D10212F347CE1DCED531120F1152D6B24B50F5
601A2FBAA743EF5720BF7DCD1454F91A0104CF0C1EDD6D25F399FDAA930AEFD0
A76993A8EA6E7F9364682F8CBF80BEECE8952E715CCB46826E1B3EF94F83D523
4215D3AAE275F57B3AF586DAA995C6C745F1BD82D19B52AA27EAC42D040D7F55
7A3C7EF060B9335977F1623483F5C232EF2AEE2A74D63C098C4FA51ECCD76F7F
657272CDBAEF81ED643D694FA92C4C6031BA60AE7768DFD9CF2D6DA0DE6C32C9
26B4D15303077AD24A941522DEFA1791FB816DCA69C3BA36533204B22CB14179
F5E53F18F51EA0545314D629B1197A6CC24A699A20436D516467B595A83A779D
ADEB242163548E86188443495439DA3A6355A27F427A6477CF47934B8ABBAE7E
0571B865ECBA5D7682D5DF8C0F9AD0F0365E80F13839BC2038BA6D47E2C09AEA
523D59261AACF67584410BD13980701CC54C296BDCF7697ABFDF5D390B3DCB41
666C25BC6173B1A90478A87C9D5CEBB4AAC5F65BB489B500DFDEB03F6060969D
EDE55146CEE26A6B6B6175F7BD52DF1370C8D9F35A783595052814F58A087A05
19B4E270EF483A14640554AE813242693E1F644829412622B034879211399FF2
508DAE64948AB88336A1864642BDCC0A7687F5B6FEED36993D9B60E3CF9DBE5E
D353E9E27B3895B1C8E92819F18A0BBB461E9CEB431F2A5B7C5DAA42FC9CC648
50FF22C05D7CF3A12ED648C4C0A621001E7CA40643EFB660F23F275BEFF28B8F
AF0AC3CB19C5EDD8293612F5CC23487295BDB0E16B3A85F0DA9B059F7855BCE8
C0D9D6233FA4377DD32ED7C16D5528CF678A90C25778CB6B49F8DD6653678EEE
78F483FA5CA320E02D2DA655D2C7EDD16E79E0811E2DCD97C474D12345B90422
506071F8A3AA67D67D9668DF2DED4D4C389D6CA8344164D38B1C5EB8A9BC970D
0F21EE4A8BA74A4B5CBDBA2BC6C9BBEF03BEE0194374EA7A7A2D632180584012
E70C77258102ED55D839C3D32E899E6126305CF9D37A2AFAC12676D7111FAB27
249253CB5A25DFE91EFC79E7B245797246A2C0A82AE669195B5F8C574E9B93E2
7E9F67AE39FA4A63B28EEF62D7881B04179389196EBD56C3374A3133E9A9A78C
8F59F7B6B22151665A4988F3A550FF9ED2FDD0B1DF58D3C0E69553708C4DE51C
8CD22F9CBCE97ABB3342E37F3A3AB09E455D65F7F6F7E463B4EDE84801FA57FF
59BA9FC5381441F32FF425AA8A3F162EC5A39B71544E4EDE76D4721CBA9B36AD
34670E9CA5C71BB3E40A5F92688F1F3643698073BE3A88D5B4A12AB377868382
460FE4763EE47AC997595C6913EB000DC450952A593AF4EBF1D97CB0AF60FFA8
68E95C7475ECC40227D54B9C54D87C5124E1F3B0FDC5A2E80155B131614AAC0B
DF69AF5002D42DB6CB0E321A042C5CE07F636472933C5F76E2C2C7C4ED99DD31
D1AAABCA15E7C674533FDFD1A2A5FA5D1C845A21CC7B18D72149CEB5064671E6
0CF071D3639FE8F3487CB5A318F599E86EEF6CFC9A903E2B2C3DFD2AF77F482D
DCE951C5451C595727D448B0F6CBA24FFF0469E797AD37592A23ADB3F56D05D5
806759FA9311710D2E0C222372AEA92AD2200F5B873CAB0847E50BA367C68DE1
50A9270BA7066D5EAF12552478849BD0C73E83A920C6812ABD6B1AF82756EDAB
CA590DF4CF8403FDA84513BF9E6AAA2D6D867A18766EB3DA9C7C8F3C6A3DD233
478C6CE41691DA1B3A0384B70D16847D4BC9C8BB14655F3AB229CA03D5B82914
0F99CE529C78628DA4CB0A83391DA0A3C5BE8BA5105DB9F1FB6FDD9F264354EA
6394652E9F45114DC9CAABAA286C99299B36C1167FF2D1DB0C6A6FEDE557675D
2AEAD668937D9B928F0DC81959C257FD3837F917A612E43FF90D4D3043F24B05
037922861FC2A5468EA2987982141C69E9EA7A07502595F0883287BDF88326AD
34DB5CFBDE74C26B12ADCEB69A766382E7BAEA2E19C5285A64C0CB55BB8893CD
6DEDC8DB4B16DC6095ECA3878D75A063A2ADC3D5B874898BE128284EE97FAFC4
B7B16EC818115452C866FCB208D5EC38A183145178C205A4DCA549DE6A5DD5A2
771E674D5C531EB33AB5537B5FEF3D4504B3CEA3DFAA87C23E9DE3E7E6D77BFF
2EF8D9815DD8F5C034F1E6CA756BED0CBF0C9C499160F54DC9A30E25CF7A4CF9
115928145E831080E833209290966B5AEBAB6507E94E482592F23D4B39F3F36A
FB5B42DA32408296253851B99517D548AD7E3C08BAC67121074EFDF13C62B616
6E48557A4D47021F7F043DB831468168C49A29832EE7C1D1A4F44C7A59645E99
F8E751235577F63DEA83962BDE6F7209E0D2526591CB264D0AB3C29E4322DD89
9936742EED2A45E56A336376FEEDB70B21106DAB5E26329F01BBC90BCDE17840
7E06B1FED3FA057D94A8EFAC446BA123BA822B1938F65D8828D29208884A8FDC
1EEE27DD0F38727FA73864550DCF1789D568D99042A2F6D1F7A4B7DB868FC0EE
DD6B26F7DCEED2A926059128413005DBADA8C15A3A723C20822311AB5ACD8913
DE77838852391CE506E1115CCE3B3E83FD341E181B16537BA4FA19A65D32A219
8D1368AE5A4F8B84BF6E3EB0FA7F64A19181261BD272BC04B18B52748F800F70
D9D61B4B5908F2B64A6C19C25A88F291C92D47B0E2128DF9D46E25E65CB9F908
B64D1A342794A244CBB6934CD23A290133B495650FBB74106315844265A8AD7B
144DB810E21AA4EDEC9F457CAB522F6B277D9AC35C0B31C342C7ACAADD7022E7
C7F5217E660BCE5DFA6B862DA0FB7D93A490FECB9D6BED83FF9D04AAF08DA6DA
81EE0CC8AAB126765E148303FD07CFC7F97FA34B61ED98C83F619A9F1D04E2E3
4FAE0226A8ACFFC42E55DCD108DEA1CFE4EF2A8975D5681F863FA8DE79D02DBB
3A30BB4187191F349FDF4DEAFCE4D2E746F3601F909DBCC82FA35983C81EB3D1
0A2168380EEE3E1CF15A666A6AA4F95CC5FB4832ED806A7B691226BF5DBCF5B8
BC0DE0410CFCD8AC5E0ABE6D086074D982509363EB03E72B474A37DBC3AB0F7F
D44D2EB2BE8C0BDCE94275E23FCFEEE38BFC24B7F99C8B7FF2FDDA8FEEEBF52A
79BE05871F06A41050CBFC9F0B051743C73C4D9EE9ACABDA727B5192E685B879
FB4AFEC8F987FA772016BCB3BE345B35BFC2310B1939A3198CFA4E1EEEEF805A
B5F348EB8129EAC609F32A38C3DEC16BC3B8B9AD25F22F48D2ECE724F31CC628
B6F31B7E78ABAF3204A7271FCDAD23F387CB633B1FD1C614BE6330ECDE241796
9BD1378431A0DCFF28B881069074732D6C177EFAC6CC0656989EEF69D20FF739
1D2303927801D2F70BB9517502F19F87D5DF2CC07A70397F5404D88FD48BA4D3
DF9923803AAC03F13F2AC9F3B3B379DEB281DA3196F12C89497848BE5C23552A
CFDB410E55888E1EF7827B4D0CB79B97FA3828902EA28D475C65C78C82C097BE
3CB2E9FC891F21CACD123B598D5E834BD3FA81F37CB24EF5FDFCA8DA5A38BC6D
5FA4AAEA3ACA2625D8DE7EEBDA57083BEF75738BAF1B51399E7B41A38DE06728
578376E3CD94655E8D3320A3CCC25FB92EDF18EB60F35441D1F0F167B8240BFF
0CAE84F56E758E1A6682580B3119D23649A58EB0DA73D8476DEA6329D995EF85
179B5F8ACE384F0BF58C79C64F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302531886DDA73EBC9178917EFD0C20B
133F1E59AA9B568B69ECCFC0900517036FE3D4C09BBFD937BC5A9C0B89894A8F
63BCCA3746BA056D1B408B16E976D7BAA7D0F7693814ECF52D90BDB3398CF007
CAD14DF246B4D1886070D41A28110F88C9D3EB1F30B1823E0EAA1A35733AD321
E6338D62C26AB6FCD4BBB703248CD7C5CEE83E0167A63F89ACC9D09117C4D017
E773665CB7FA79D22231C8F858735B554E2ED612A436D299491FD31F810F202C
C865B87083F980C8DF6A3DD43D437617A69D3E58FFE85F106F7E7F6E50D4D25E
328F7A76B73078B3604C51CCDEAEFA74ADFB9A6C3A5A0EBDCFB578CCBC3553F8
44D4B2853DC7C8415AE3174A4C2209F4107C23000ECC343882C5E2ECA42D8B33
F4846EB85076770BD7E5AF795E1EEEFDC5F0229761DE6BA728FA78549D6E31AC
55ECFE0C64351DCC357F619E3771692B7DF8FFD7FAF48B4299C702F866374FDC
696E83BF09BDB1C40B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B93EC4488CF1
43FF3B2A427C5E1C756D1925B14DD861740DB6988068262559A6A8F0A2794D73
A7F921F51FB8B769F5494E4E5E0E95C2B3B4ABE0355D63F075E0980CBD5545F6
64F7175899BB0B1E29D7C2504CB59384FD67B6FE1D373075B49B8EE3E234ECD5
9C2AA27C689FAD272B5166EBE5A005665C098B726EEAEB2E514ADB52AD598A1C
20FF97137799B132590E7B7D34CA7F3C8A4586AEC91CE06BE88A9DE0BBA37BBA
CE09C3DB3CC559C77F76AE0CDD716D5CF63486F4EA989370B2B3134F6C620534
FC3DADB971ABFCC70A23686EAFB75F47D179CFDC77D28492C0855D83988DA5D9
494F92434343250D8E88677B3207166E577599C8ACDD501B71C773DDB4DA8653

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /ffi put
dup 38 /ampersand put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E800FE37B40C4F71890E29A0CBDCE9BC13F793081C50D359ADFC756FA36616A
4C732DA492194E35AC5629D648B62704B430A6DC0F46B2ABDD0EB13C47CE546E
60F9D2806CA3E7B877134D89CFF7BA7AF30BB611CC6815A023FFEBE039773E70
888F39B77EF3F610BB1DFA506E3326A1B66EED77780E27011C459260ED3DE4B3
3761ABB0D5D93779C4FA4C23DE6A692C97FBA9DCBD76BD0D68CC81A2D1B3E05E
775B87924B3DF921B9F60E6CB4CC9AD99E71DD984BFC371FB91F2F8CEB8AC9E4
DFE0DEFC1020DD43ECD5BEE901556E8B2E8DE1CE60F2DFE3CEC267322116DA2C
CE9B70E60DD69C2D5A7E90CE76A0A23143B5E91B6E6CF0FF47D02C7562881CFF
8FA328866762B5D1C622B82FFCDACBC3CA9E9C02D858850B3CAEF05A742BC84E
2A5A599899A0A4D792FD16DABAF8C20957013A48427EC09B14362B1994105EDE
7A4D0CB73AAD2D85E00AC395FCA2077E6877EE2A1933C373CA0D9A9C056C642E
79DE572AD8C29AD9B03C015A42444E0BAE21641EB51A8AB70C97E07EF2D66477
86151ABBFD0C0FFAF3E14241453A5EB0B3782AC62471A7B87E8F86C964D629DD
E318B9B59C585367D514B8697D467632DFAC6184891B13C5C34875759633A4B0
E7891A844F6BD0CD9CD39A6399DA342657CF71D23B45D39E4AD2BB51FB8D59B0
051BD1976AA4101CA0B284A6958D2317DEFBC0D662C9623B30A680F5B21752D9
B617F430FF1D4F59E38D13C9CFFC9B390C4C5249993BF25C5A0F1E4281A8BD56
6662B65B09CBCA999E78827567FA87531750AE9615F0CD7BC272D519BF94C420
C55F6E6C367DF9BADB38BD55425029711C058376FD8387100A098F29F52D4699
05847130339E07CF80247952AC4C6DFAF9A735FBF92B396F95D9409C090F3256
383C717A87833A258A22E7251CB5486F86A5CAC5780C2171A1C9F4E2C6F4F58F
06A2595A505456AF4ED9916F146B8BF9DAB9BCE2FCD2615C75DAA45C4706BD46
E81BDD73A8CF6249C9A466CB2807B78A1B1490700235F9D996F3FD37F8CFC912
06A037ED43351395AD86F08154A24DE5FB94D37C84D7257312BD40CAF3D141A1
F4D39239BA9AECDF403BCD4FCD92AB384E63C7652EABBDD25D8624A52891C1E2
8897C4C0F468011C170D7C9BB0AA5CC8E05AF766321884F2156E3CA41AC4C5B9
0C7DBE9A4DEDD4DD901F3C7E5709BCD40F75830F9ED7FD1D8515C77F781270E2
0945493765E5E785F73494E8F7C477F01B9656BCEB860F95A3B60B2CD3E08F5B
35E113A345A0445C93174CC16065606CC4CCD9EA8C0CA913CF6BF951FBA3414C
D3F359BE78A4768F23E673729501BECE9EE37864F51933BB106F0C41A889BDD7
728EC537CE416019026ED98CCEF919609FD27AF1818052A0667AB5FFA762E8C3
AAD229257E4D9B859D1890BF1C454CFBBF54EDE649277E6A49E34BA661B4CB16
B563500A574B751ACDB9F304C66D364F8E51326870CA7B2B9B461B646F93EAFE
9309297D3FD78B546130418692E6CA85B78694CE908A47C7EBFCF76169BFA705
9783C13A977D374A0AA1FFD5CDCFF658F44E3363068808AC0E83317FC5A6CA1F
CC053F49AE560B18BF015F4ED3C550F12CD369063D6579DA277F4FBA1E06D6F3
68354B8CA94EEFABEBA3F33F11B70129ABD5AA8D0C974C62E7651D9095DFC26E
7C7F97B7213651100B221E97349A0AFA6AE0F1CAB93E73A86E319228F981D2EA
6D2418FD143F1A12707C5AA4B16120918D5C9C3C04AC9FE8BFD30D2C466E0131
FFC0A4BAC31986311E9223E9E357282A142FD7AA06D492E6C66D120A3362D782
FF9A60E1A76ECB46D28A69FA57CF0B5C41E5F478C3360E214EAD683CED3D12AB
1CCD4D6457C2EBEA31582A92653A2BCFF5C4D09832F849B126CC4BE65886429D
BAC199BE20029A83BE2E376C9EB93CA72BCCC49E040AAA532A16527AD9CC8780
FD2DDAE118F55D6CD2BC3F54B32AF85445044B18E3315BD729908D536D78CFFC
9DD9531417C7A43DE0F6C5B4BB105DF76D6337C49C5154D7FA852F89E19F21CC
759B10A372B8EC734804E1EBE42762EB52D6D840E6E6D2D291B7D36D485F3B1D
646DEC450AF08471E18DE229DDDE9C364A79744B0D1DC8008D28F3074D90C018
66675C05B8D4566F289CD90816BC0D2D0BB23977C6CDD6DBD03E53DA1C433B12
7988F9C3722A7B8E32E7CE80495FBCDA57C3A8BBCF7629378B76EDB75117C907
5264EA44D1BB321CBE57D822AAD4AE737FDC27970FCB37DB9DF391696EA6101B
1F0D4262FDCC5791A084B61A2BDB47366591F0C24C14B4B4D8033CD56D6845D9
4F02AD4BD891D3181DE692B6795012B8067031A373D3C1ED39ACB1CF45CC0F0B
DD72E1C5BC3B2E50ECE50AA7C97DB8973E066CBAAE4C7B4627AA1D2D9F2FD100
617D0AE8922DB7CB5C067606321250823CD32A7ED4F695000EBEB249B4B5295C
C3A80BF319DDAC4A234CEAFE496B7B2FDE4394BF101BB74A433A5B4FC86BBFB6
147864CDA2906800B33F2A9B3F5ECD5E25B58AC4AE62257EFD9D1D9D23697BA3
4CEE1992EFDFFC345936C7AD2E99BCAEEA7BEE29E644F1D25E3BBE6D6A023D13
26F16DDA9BB871253ECF047B222D7E1BFA94376BBC221DE27BDD3463B8AEA856
93BBB1772DCBD640251BE776CC7519E46FE3C9CF94A78D568F1F2305B60C7649
9B737A57F6E28074BDB45D0C1C24D9FC18199913B7CBA977908784BE8B3C4DED
ECB34288C0DA37622D764DBADE7989EB2E8D679D1CD603D89743F0B767D82C58
B456FC56660723E93B019D45CC50B1BF01D63311B95245928A33E825C6F03532
2326220C70E999AB8D06E643D52B7F6FAF86B83469CE827351FAE6DA174B25C4
6296124141CE8FE5A660737FBB5E3E7F68F7D01CBA99A01DE3BB0A55DEE82459
F11A8FFBFC7F9527059BD9159507AFD6C6C5C8991FD4D19F80A02A76A43E23DB
4C9938689FB1B609FD8F3AE2DDBF00DA84DCFD6791F6D3921977F84B316E6504
996D3202C3EDA96D72195729FCE91216178B93A28DBEA93513B9F47D9F0FDA75
79189DFE82E708CF31582B8E7C13E49ECC75056079A0622D8C458C3EAC893676
E34DB862B72F8EB40DA6284E76D38D01E26B7A3B5A971E8AC196F3CFFDE641CB
9CF46049734C35ECCCB683F02C2830547194B5F2341E8F0291A6035839C15B51
E3DAD7DCA1A446FE2A49D77D1BA3DE22A78B9DA909B178DFAD4D66186C1716C3
D6E1F53B29E0136EB1E5507ACF4D815689834F7584CFDB87DF001821DA145334
3EB5ADCE2FEAF507136991414407D1E96AB98F1C9B892088A4ED15106BA85A10
F28A6C92AAABAD7E515F8DDBFC3A263D0D12917A957864A67FDF9BC5699421E5
BB2E01FDA1027B6C00A2B379CDABB13ADDF4A4C9583B156AAC40CF31BDFD82FB
1BDADC5C2B231A0CFA2EDCB10AF40AE64D6330E0E463D6708BA178C61A4905BF
A20B93FDEF54B60474ACF89FA65B92479C2F98B90289E4236047235130A290FC
6CE84E0A8036EAC2ABC882557879603E293DBB586A420E8EB680FE8C908E4F01
69E18CD7C42A4BE04675A6DC8A1BABD6735B7F31F63D496A54D8A03678AD0D06
CA25B3CD70B14D0B66459A72A1DC1454956F1E60420A3F675A689F33891B1C97
B10EEA1FF71A2CE950F3BD9B9C362F55B8F253F0CCBB7F623FDD91EE84B967CE
5D540F8E418D00C39961DCD245071EEC2A256D52BA0E851948353F5744D8CD74
E6E80C758B991A41562F7AE1C353FF630FACED840D667429B58C2F5632C5862D
35753EE5F2D91E1EE1E45A6835F8679BF6098FC5A0599FA094AEA426DF9A0EEF
150D4A0E484F39238540A2BAEAFB54E1AC5E39DC287D63E57250727D20173442
05E209E6671D40DF31DF5F087AB990B57598AF0D7FA4B5F8346690BC3FA778F2
18F9F167EE359F1725914E8597D82AFEB45F9BFE1C9172DE1A32773E404E2CE6
FCC567B932BA94FCBA293718EF3EBF33BDD1EBF004F74D17BFCA0C94AAE9AB04
2D6BFEDFF76B8449C15C8CB1DE0D80A69E4E75397137BB9EDA89275E478A775C
889DFEAEF1680C8B06FC89ED315EC6CFD7354B947E9B867BDD9EB6D5447BE0C2
B36AB176AB60D63AD61F190EE664D308840684EF074F71E48F618650BF3864DA
4777BE4B511A36C64D1FF10BFD4FD42C27B0CFC7048531684107FD97C8F80C17
919663137B3440D34BA4777D9EA393F2D806A6E2D00E16069002864885D2AFA0
A7EA2CE9288379392FA3A628DF8E4B196DBDCA19A17F88189A689BE445D9FF67
B7CE7DF21854AD9070A313769A992D11E8BF960E8519FB4178D50861F1510C64
9AE5152762E7E17BD06D5539B803440799C8B733EC5BFF7D8302BEF4CE1E74E2
E3FA213147DEC733B964607D75094629015A24D7C60C54191C166728E7B7FEC5
72ED47336D54FFDB92B9EB37B0804FFC649FE9657A5D29292EDEE8A764C187B5
1F98B1B8D9CDCF4D246E7045BB94958174CFDBBFE2F6183AFF29720F4CC6AB06
FEE635DCC8806AC5CF6EA9CAD04E8466B33F6F84C90C242C8EC80087187D4FA8
24CCFEC9D648BE4156785649EA2CE50C47FE5755F35BE5FF8B3BDE1DB5296F9B
E67CC13160ED6A5211120A3D9CB125D6F8117F030D4E906C78DF7243F0CADBAB
48F348D1933709C91E54C9537FA72E0D07F2BB67DD975C6330E1D7747C4D47B9
6FA0B49995AC51A08D11DFE3F4F49E9EFEBB2F453FCB09DDBC889B58E7E6A9A4
70A7F6745D716176CB9C1EF103096C65C7497C65E44FF0BF8E97301FCDB1558C
B325CF5EAC2A8FEEB3406A2F061CCB79DC164DE6FF8A556A86DEC502E908EC2F
237D10F3CA9C06CCE5E535F022A64BC26E207A0E977BAD06B49695DA2725298F
82CCD15D67B408B9B658BD9A73BE5D9F8AFBA4F6F35E5CC98913A850DBE04EC0
1D2EE5ADD0A27B22074410526EA286F379C86F2BD1CA61AEA5E8947B106E3DF7
CE2482BDFFF2244A689049F40F97E948805E393A31F1CCD9960009A4D3CAF953
3904221385A8D7FB5059943156165FC71F595FE7E468238CEDAD479D016BAEF0
21A707FDEEF76E52C5CCC0F7ECAB5FCBC4A4EFEC6D3D52433761E37AB53B959F
23F9152DA6B891E74BEECA82B60B5B25851FD1F527F055F32A77FEFDECE2A788
5B8D475DD77F05F3A0B4DA448F3BB4EA65DCA9A4CAA82C702CEBF19202DA93AD
6E928CECBE6B3018903C53E52212A4F1F09D744CD8BCF21223B02CDF21A573C7
835AF829D5E9C65B5071EA2356139F4085408AB2384227BD0246E0099376B904
8AC99D6A5D82A66CA3A5B2436DF11D9B5A044B8C653F7988A01DEB426C436A67
A9EA544127879591045BB6DC008954B1A92B82C96912D567A39DFB4875B7C56F
08AAEC3A658DB01110DE7232EDDBAF32148761C5CF62197B5A4B50FB9F8391CF
1F350686664A8E7CFF714106CF79FFFF6ED5571266E6DBFCBA6522088BD36D91
674D80015EA80F949A9CDC0263A623D61A9E8EB1206B4C8B2C56708A096003F0
ED38F23908893AC12703CE7A2DB56B2CD582451B0EA361DB5A9AA3442A379E46
653B7F6198444B2CEDBAA401E7B02F40F76715AADDADF77412A47F4F272618C2
2A664E189D31055F22C8F43F0E0A0604B0527B7B38BC40B9207BF9C8CDFAFAD7
7684E14282980A0097F5B7AD7DB74E5036584A29FE929A12B848B5F7ADE71D70
312020D1E480BAF6DF26416F4D7C46F356BA35E45E50EFAF93E5562013E3DCB5
FC88064B525AC92DCF9FB867AAAB383657C3A06B75F69EE518204CC6F1412F3D
A66C16DB9F76E0838CBB2B7AA89A3BF7904FD3DF553E5425CC5700CD6779169E
8687C6B683FDB991588B3AB038234F4463E5C59A0F2C78255AC2E34B6A3F89C3
AC3E50416A2D9AD53653970377BD90C46CE9D5E97FE37305E91808D5D08C7291
4CA81EF068F00F5E44DB740F58796431A2CC1F2B8D7DCABAA1D16D6DF6D11D48
FC0667703799E8CEF8EBDB9624BBF1F8A59DD1222BA4B9B73CA68C27232E6289
F146F31ADA0CCFFEE4D614B0105C82287F16CF99DDBDE375F3CCF300953DD6CA
1AAECCC49DDFAAF9E3CE6D90FCCA711650A890507B40C5340520497B867710E5
E0CFFECE5E51BAE22382C169668ADF73B779E3516001BB21B9A79E921C17680B
EDF30B7B608024542B5F469CAA270E80789201013D9E6872AC34A0041015689D
53F958EDD9CED661133F09D743E6350310C06F6EEDA8C71BC1902A142BE67C33
5A6BAAD4BFE13111D658207B4F6BD04B9E02191ACB48DFF37759EAF9EC337A10
458DBC9B89D92396FDFF3DB5FF97CACD86A3FB7AE5DB33076097F7BE57F45281
08C1667E48F697270D83B3E7F13ECA812CF56D863E85D728F02CE8A673CA48A4
B69243D88449EBA9D0C782EF10DF4F3B08FA1DC79FBF706B16BEDC98EC9E1D75
F5BDF97ADED294813D1212E7B12E552DB1B905EF4D30E544431556511BEB87E6
291B48287E7510369F09471FFC1AFB022869B62EC5271F0C3F0124058F57DE05
39E11E147066E643B5D34EF99AF622371267E38166D16EBEA7DC6791E65C2B0A
1AF3D44AC6E6AA8F5D6514AC5601C771CB83EBCD3EF8EB9DF38BEBBA84A23E47
0F6F0F9B53AFB543532ADBE12265F2AB919FC1EC5F41F8BE90F6A85E7DB940F5
04045B6B4755E3AD88A076FC8B807169F07B6EF08827C9F4B3D008EEE980D2A1
5C6F709DF8C6AFA642079B128AF20E98C9B61778041B8BEC1F6E6DCA92D6809D
B0817AC7AB4EB2F5C098EEB64FCE50C531BC2E4536973044658C3533E6306E5D
9CA4958FA3A964FD6821152EDEE5D1E7AF31E6AB2199DDACCC1E31762342EF32
4C265DB973DB40CDBB29078CFADCD6EBFF530FBD5178756DB278D0F07B891D92
A0426F7297056FEFB8F88F02A9B608CFD641EA27828AF22A30E6CE5E439940A1
6AAE45263B8C76B33B3057D941377FF4A6FB9C3CAB9EAAD37549504F38AD0EF8
62C6FA16CF1224E1548DB4BCC1C23FC02399516321103EC6C7C8CEC16C6B9388
7CC42A05326B7A7F245D55737F4447BAB9469B57FF2F4FF9CF5931CB84F9F487
F911A7C76CE436CBEB83077C998D02177E8F13EAF305E62E436E7D392C8E77CF
682A7BDF7F7BCE122DC0A77D7ED2843F6319D3AF4B02CC2BB7D4349399ACEBCE
30FC773A89826FCD820830005A79051A6C19C4511F7C662EDDD6E6335661FBEA
6C671E4772DA463015ED04225833AD8AF3BBF90CAA40C00043E54DB86C60A37C
C96B46949C8608BC403FDD9475C2F6C05BD71BF552D8D58D19F137216C197EA4
AE1CA69B2AF9BE609B7AC742CC575B7135677A6D123C2965D387367A293E6F9B
BA90CC67B4D8867C3E0C7F35C86537674DD65BB7C600D033A003BF3E4A3CD7F7
AB453B867F8FCFD0BC3ECACA91D7297CE3102262017A2644720FF41C075526FC
EB45DC9923FC83E8328D73391A6E41E4FAC53736CF5A1E16340B8CA249DFF067
E70E459B4A7159106A0FCB50136120DD6FEFF7A48BFB2C3D47CF17CFB14020B3
86E9DA1E052DB4566D8E2B9FDF719111FC4FA5C902CF5FEEC4F707005446BEF2
134391782330F2F413E75F3339CF7C2DC3BDDB7A937CB3A402EE612D9BFDF29F
AD94B033587782EA97B502C9C2E4398FB9CC74EAC040B3AE09AFF8C61511B983
F48D09ADC343831F515D4CCE51C2222271BBA76C4838665A0E4C6E53CF660552
34DB1D493F4D7BF5826D0FFA7222E5EBC5CDAA01774CF4E8882723FBF31C4A5E
9C8D63E3A0BEB3750E327240DD9F04013627677F697E4006064E9424CA7B3FDB
66DD20E17A5FF08F6ACE9B8C0F867B0F0CB0228310F2C9270975637EA7358919
6C676D16804D5FEB983357FDEA7E70702B4328CF2A363D5C79143F532BA6F320
AA7C7B332DEEFDB5FE316C6F4046994D4792E7258954696C20992D602BD6CBEF
2ADA0B47FE453AF497B2D5990A51BD1942ED5243FF0095545C7A3886385E5E75
DA665B0272DEFFABF25EBCC8FBA6EDFC4DA0A84FEA7702DEE60AF2BF9F272DEC
C65D01CC78151F921803E1665ECC869E4CFB9A44F6C0DCB57FBA1F40E6B0BAAB
510AA9F7CF36472FD4BE08BCB263A707E5D8DD8A8FD968B24AFBE7087CBC2BC1
8F798EBEE1581C876E4488AE4143AA04015222EA92121E8477CBD417F3C0B719
22C756073465E35B3BD68E8483C5D6F15A180363E6DB31267D3C0F8E631ECA43
73BEA64ADE2EFA0EADA2DA2145C6CFAFFBDB358C1CE32324C928EA7960B96306
5CFB330B1F1327F4B385CF9220117493AC52353741F8CA11EA83147203595A5D
0CA6D1B7C90271A427987468EE1F944AF186DAB70C1A5A22778BA8725169A779
7C56FD6DB72E7760C13A05403BA72BEA45C456B8154066F289CB1445F210F6AD
41190AC594F186C9C43804B5D2CDD68FE9B9D5032DEC43B53DA515DD8F357706
E91AB1E2F66EC86779F49C991A15BF172986617EAF9F07558DA919163C6678A5
A2EFF7360994852B6BBBC3020B8C49D78AA427FAA09EADA616ED7245541313D9
7FD9E4A0ECFD41BD5B2B08CFB16D280898C9F3E168EB92900DB4A12AA22B7498
6C5D22391D5F132E7289C690F9FF9478D845AF771C760D1F89B4166272499A1A
F2E165117D219696219F6A0674A3E0BD6281284C3868FF420BE13A9237A2F297
24299DDCD4B2DC161C0BCB62C5B7981BAA9C6E0F76B9406036D2A1C312F51B82
D72AC52EB8B77D4E33973993A6949E276688E248C436E9BDD17F71892B0F150F
FBFB3DD8094FC720093D66C44F8B783B9C05649DACA9A7BA311610F38862F971
DF3FF254466609139BB29964FF13FBC2F556892777DA9EAE22DE0E3E01113F27
AB6A1B66B9BE7B218D3FC1ABE429AB9178B7D3DE5DB7D6FACB61B2FABE6319C8
BC083FC6F80965B057E5A1DF8E0A196BF0F743F7E6EC01F860BAD7ADFBD46DEC
F8DC3F5FC0D1CE9031EC517A70B4C1B1067F43917BA6ABB0D7D9FE24F0DBE750
FB42D9D33D71CBE44D6EBC928C84E6A33B89B9290B34E49CF938788F9B05E3C0
5D26F3E8B2BF0E14DF8A3E5A98E23882DB467B46B177E461F703579934E400B5
82A1884BFC113D2656C17AAAA06B51BCBEA6608281CEB142C24C417BA10ABB84
D38B286CEE11BC25340C3A6036BCE9FC09390A14E389C78D29362839EC3DF0D7
CEB1BE3BF7FCF3E0A747D5C045C0E9ED0598F19887C4F1E4B11D10CD8AC20930
B73D085070E9775C31EF5F69C49EC32F1B1697209127631C9E2E23BE15B74FCD
CF704867E6B751DF5E47328C3AE1991AD336B6DCF9CB217F01962AFA68A66453
E4E469CAD0BAAF2AF8FC320DF1E5ABC02BEE09B901ED32B4FB6AEB1DE5CDB93D
DCECBF1BA52BA07DA1EB6DE5EE9CD34FF9EB8BF5018C3D283097F259E0C34DC7
ABB18CC9E67772AF6A77941DEF2E6BDAA694076DBEE75C4AE40ABBDB9A87875E
76D12C72F2B489FEE9E3DA3EECA39D4F9FAEBF6CAC3488F079CC6E21D12E476E
E3AFEBE49417879B47AF8F84973733A732E30DD6D26D5B4B9BC86CF199C958EB
4D37B0FE9E2E4D6A53A9E2F520889BA3FE3A2BDC860DEFC0A51C359207871A4F
6D5566509E530342F58374BD7694BF0297B2A17579DF2CA5FC0088D19CC93AC3
58191D6E46816F265E15CBFFA8B170F4990EA1E9A70DFCCFEF0C0723CF54A287
7A9D8D6AAE1504A527F47588B9462AB6846EC36A5639D6CF4E5F425EFDC4481D
44A96BDC23D6854AA869AE3FAACCA10BA59F11A03E5C9D03B32FA1145A1A4AF4
4AB21267D0D2F8D2DAC7C54405E95DA8AA8285C31F0D70EFE46A4091405DE016
CE6B6360D692B3A9D31A5BB5E39930F26F5BB4B125925A2563741A1815E960D7
3368733D2739DABF455DEEA6C185B15384477789E204AE927F737A1B07D5BA4B
8947C45E40193F83254E25DA1F5C7B572B8AFF0D555E1046742903422923ED99
5D091E82E181937F96CEC826E436918E928F25805DB3FB003977BFDF3ACAA43F
253DAC3365638506F118E9893051F81D9842CF06544C52DD456BE0C862E9718B
F952B30FE1BFBDEEA54C2A301009C55E3D15E7F00EB33B0CBB6B0A79A13A9832
1187B2EA86A82E5AF2733DD82AEBA54FCAC0B7CBA88D2B424EF9A6A93E0010CD
0805EE115AD4C0944825DDB2F3B9C2FDE66EFA0B9C2B99B8D1AC74478558A589
32EEC45048E9828D758416776CE148D0269A5A120744E776257BA75EDB4F0804
17CF9F4A21085C28D3C12FDB8ECFC1E3FE99ADB5319D6C82D7FF09D233DF63BE
45453829C5EE0ED002CE10BD1F17CFA92E5A8464D8C78A032BF42696A0B95711
BBBC5D3F96AFC50097E465BD9137E211B10CF56351CBD69E2EB5F39C68BCBBB5
62D30670C8D98FA23ADE23C60068672D5E57EC9085AE22387010A7AF7C3D9145
886F4BCFC5C77AFE0D128EF9253F3E209D8F135F1DB0513675FCE5F6E3546389
00FAC1A3330787350536424189A85BCE39B5B77E2093DF0E927571EFFF53B8A2
0ED7D2A2BD396FC9B75930CFF75ECF85DC6BE610780818260F143C5F6FC41207
85836394F5FFE83B6C84A14558766FD6C70AF57C363F36A99D05D791F37B8719
9DF408D76D8E48CE3BBB71AC4FAB0C59716E7D4650B2C4069213CA56001FCB22
6840681C623BDBD980CA8D7D6E40F3DEEE5430004020EF0E39A6AE97487F23CE
93892490BA73ED321BD0179A04777F958AF2BA62B45B51F7403C05B3E6629CF0
AB0E05B13C8A584B18F23BBB402DC032760D2483AF3857E097F58D7C9961692F
84F3B45808A9585AD3C81E983FFFF01A8B36825CFEC91A0EE119C48AA14A6E4E
7CB8F048ED766D0A709035984F83A0DE965C001DFA296FF67ACCD527AA8201EF
587D0E8A25CC6EFED464C714351EB3903A2EC7E5D959F177B7021127E27729B0
68C52336890427482777BB097F1B9F330DDB4A4FA004F64D7B1B5948BF286F33
7079B8B0EC7B33BDC68F992BB04721E4D6AB7760D95C6A0F3A97060252A5CDD1
761C9A955952242C4707BD8604CF1E52B9C3CFB7705D48962A8B2ECE8D6D12BF
6F77BF05A89ADCE6740365AF83CA8409FA77244B6FC16C1B32035700989EF238
AF8BB880AF4F58E177356D57FD2D09CAC7131FA9CCA42E0355D66C6CD4A8323F
1BBB07F13A9A044F7C28CBAEE51BC7F59235D4E56197C6F0C9C5AA278C9C63EA
EEB4A52CC7694849EC95176CD6C89A12A25D2303FE5382DAC5B0A29F17B68AC3
8F3446F4EC43C4140655707FE60433C223AF849840051D6599EFEB3DAC686A45
396D0D0020BAF16DB92E4176C64D2C06AB252E985BACD8ADDA717761E81C4B2A
ADB91A77186D34615164F3C7805FEB82BA3625A1B3554968DA4BFA0D0C7E0590
F326EAF40668B3D713F520306739C93F183AE5D76EE85F71DAA42FFDE8F863AE
FB9808C03F5C8DC0322A00161E31608CA2A6D46C7616F0F82D54FBD9E9DD3B91
1EEDED7EED4C0C8EEC1C12E6E74CA16D2CD41AA3F2A6819CB432D05DD51AC183
4971C453EB1E5E23E2E66A1970BEF3F0D1D8A224C5468F9E159B002E026C1E33
5B80A0C20F046686214CCE3BCCC0AE7FB6FE962E170B12F6E20DA8D6B30EC1D3
5F0C111FDDDF186B9EEBB942890739A04F7B4690A841BF5521E8EEBF0FD73AEA
E1F7F3DAD9537F474ECAA10109AE08468E11461C4AAA392DDE3A66F4ECFC9EDA
8D91F2E576B72796C349919233A58878BB4487A87714C64B5B6C279C64DA2752
E93DF7B8411D6FE13627B73E2CEF82D334627B438BA02C87CA430DDF4111BD84
D3355425E0BF282031A0AF5CD2D166A61EF338ABB460A8109264D00CC877B884
54CBE6A76CA57AFF07FA709B904DFC6C6D432A39D82AE55B5E310FC4F9AE58A1
5B823804F99E83AB722B3684063320851E3465E91CDFFD560DE111E3C0CB1DA2
6D56E69656D1FEB3B5979B290553B3C877170033969AF1B5CB091C6CF1607F36
6E787BCC9EF2CAEA9A896502F5F588E6704C1D91EF6B5A822D8DA331E5BB8249
EC57183EDF2328A57B03067C0234B5998DB925E6133B7E3C2A5EB9E863495B30
9A27CB391BBB9A3C30598D7A1FE79B98CBAE11544105822BA1E53C78CEE2DB01
6FCE473ECDADFBDA2704C88B844F5620B9A110109CB99EE684B52EA879CA57D0
A929706D0BEA7B324360D735534AF46180D1C96F4F17418788381D583D344B1E
E7B7CE28D1EBDF7AAEE406002BAD5597AEF858AB68E04682CCA794073CB0DEE4
AB25A9D98ADF332EC260D5803C380EDBB2A87BD563468B5AFB8B32B9CAAA7AB5
CE098620FF9D73BA02FF4F5BEC7F9EAC88653102C8BAD18C30A3283D7D4EA712
793CDB662E6AE9E5643B7D8BF5CD40986B84CB74CF13BD212D1DBB6A95D2E5F0
ACCD6444E04EC68BC2972C1897F4AB87DCA813BB4BABFEA1C902FD2DE2CF1217
7907E67DFD76BC46513E86C055567E5466887E63A9EA928BC884413B3C486D61
055FB7B62F90A10D9975A272CB66FFEA46593CF08664903A090C8431F5419DD2
23B8C9B711A3DD9DA101A04164B415A498DB3B8CF3BD5CE2F646E9B3C9549FEF
A6F81B54AD385A88CCE5F55F54F771AAA27DAFAF1F6D560F44492ED5DB4B6D83
0855080D62B9956E1AC0CAD8902A87EFAA1E0393EE6D8B5685DAA06C663A503B
7B03FEF7A24713C1AA4599E04967B1B4F88AAF3C60BD34BDD1CF343116F8FD51
7AEDC0CC426F21572B50F903E0B1186F06D72B791690971F1A07AF178A143F46
ABB8C7085D738F495960FC84F4559C4C27D8556EC3E840222918CA2E115B6F1D
A67E8BEFB40DA110127A200D285C31E861F6B54ECBFB1BC62E4DF51039C67B0F
F95A464FA2EE134C1C5056BC0F0D97BABB2CBBAB9154BEF1EE20746772221316
D9D35BDABFEAC532E78BB49853D1A33BA0D1990F525F7FF55C5A2A2510DF3FD4
3EC614F90946D5A67EEEBDA69C9615C80B970E4D96257E5DA319C2B31C7405AD
23709D9B56792AE86F20EAB92C1547B80361462E0FCBD39DB8A436C75A88644A
EF173E0B5A58E20FB4FA70ED750CF549EE1E5B83E21CA07E3F2721BDBB993FF2
673D28A3A9BA91F4468FE3C416755152273EAD9BADF4D59F259FFBCD536FCCEE
46
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (thesis.dvi)
@start /Fa 135[48 2[51 35 36 36 1[51 45 51 76 3[25 1[45
1[40 51 40 51 45 11[68 66 1[67 1[62 1[68 83 57 2[33 1[71
3[66 64 8[45 45 45 45 45 45 45 45 45 45 1[25 30 3[35
35 1[71 76 37[{}43 90.9091 /CMR10 rf /Fb 252[35 3[{}1
66.4176 /CMSY8 rf /Fc 212[55 43[{}1 66.4176 /CMR8 rf
/Fd 133[43 51 51 70 51 54 38 38 38 1[54 49 54 81 27 51
1[27 54 49 30 43 54 43 54 49 3[27 1[27 3[100 2[70 54
72 1[66 76 73 89 61 2[35 73 77 2[75 70 69 73 6[27 49
1[49 49 49 1[49 49 49 49 1[27 33 27 5[76 23[81 14[{}56
99.6264 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 97 1
TeXDict begin 97 0 bop Black 257 250 a Fd(A)33 b(BCP)g(Algorithm)f(for)
g(MCLS)1240 b(No)m(v)m(em)m(b)s(er)34 b(2,)e(2007)p 257
290 3238 4 v Black Black 349 787 3025 4 v 349 900 4 113
v 402 866 a Fa(Instance)p 783 900 V 103 w(Co)r(de)p 1239
900 V 252 w(LP)e(ro)r(ot)p 1655 900 V 245 w(UB)p 2031
900 V 133 w(No)r(des)p 2407 900 V 104 w(Time)g(\(s\))p
2853 900 V 103 w(Cuts.)40 b(gen.)p 3370 900 V 349 903
3025 4 v 349 923 V 349 1036 4 113 v 402 1228 a(tr6-15)p
783 1036 V 836 1002 a(b)r(c-pro)r(d)p 1239 1036 V 234
w(37213)p 1655 1036 V 151 w(37721)p 2031 1036 V 196 w(5851)p
2407 1036 V 357 w(21)p 2853 1036 V 382 w(242)p 3370 1036
V 349 1149 V 783 1149 V 836 1115 a(M-C&B)p 1239 1149
V 228 w(37319)p 1655 1149 V 151 w(37721)p 2031 1149 V
196 w(1820)p 2407 1149 V 357 w(20)p 2853 1149 V 382 w(264)p
3370 1149 V 349 1262 V 783 1262 V 836 1228 a(M-B&C)p
1239 1262 V 228 w(37319)p 1655 1262 V 151 w(37721)p 2031
1262 V 241 w(476)p 2407 1262 V 357 w(37)p 2853 1262 V
337 w(1362)p 3370 1262 V 349 1375 V 783 1375 V 836 1341
a(B&C)p 1239 1375 V 341 w(37332)p 1655 1375 V 151 w(37721)p
2031 1375 V 241 w(617)p 2407 1375 V 357 w(41)p 2853 1375
V 291 w(15096)p 3370 1375 V 349 1488 V 783 1488 V 836
1454 a(BCP)p 1239 1488 V 350 w(37285)p 1655 1488 V 151
w(37721)p 2031 1488 V 241 w(879)p 2407 1488 V 357 w(30)p
2853 1488 V 291 w(15125)p 3370 1488 V 349 1491 3025 4
v 349 1604 4 113 v 402 1796 a(tr6-30)p 783 1604 V 836
1570 a(b)r(c-pro)r(d)1144 1537 y Fb(\003)p 1239 1604
V 1378 1570 a Fa(60946)p 1655 1604 V 151 w(61746)p 2031
1604 V 105 w(392400)p 2407 1604 V 267 w(3600)p 2853 1604
V 383 w(680)p 3370 1604 V 349 1717 V 783 1717 V 836 1683
a(M-C&B)p 1239 1717 V 228 w(61150)p 1655 1717 V 151 w(61746)p
2031 1717 V 105 w(201804)p 2407 1717 V 267 w(2617)p 2853
1717 V 383 w(439)p 3370 1717 V 349 1830 V 783 1830 V
836 1796 a(M-B&C)p 1239 1830 V 228 w(61150)p 1655 1830
V 151 w(61746)p 2031 1830 V 151 w(19048)p 2407 1830 V
266 w(1824)p 2853 1830 V 338 w(6760)p 3370 1830 V 349
1943 V 783 1943 V 836 1909 a(B&C)p 1239 1943 V 341 w(61160)p
1655 1943 V 151 w(61746)p 2031 1943 V 151 w(13307)p 2407
1943 V 266 w(1299)p 2853 1943 V 247 w(342035)p 3370 1943
V 349 2056 V 783 2056 V 836 2022 a(BCP)1028 1989 y Fb(\003)p
1239 2056 V 1378 2022 a Fa(61056)p 1655 2056 V 151 w(61806)p
2031 2056 V 196 w(4500)p 2407 2056 V 266 w(1800)p 2853
2056 V 247 w(154308)p 3370 2056 V 349 2059 3025 4 v 349
2172 4 113 v 402 2364 a(tr12-15)p 783 2172 V 836 2138
a(b)r(c-pro)r(d)1144 2105 y Fb(\003)p 1239 2172 V 1378
2138 a Fa(73851)p 1655 2172 V 151 w(74634)p 2031 2172
V 105 w(349100)p 2407 2172 V 267 w(3600)p 2853 2172 V
383 w(499)p 3370 2172 V 349 2285 V 783 2285 V 836 2251
a(M-C&B)p 1239 2285 V 228 w(73929)p 1655 2285 V 151 w(74634)p
2031 2285 V 105 w(172963)p 2407 2285 V 267 w(3150)p 2853
2285 V 383 w(458)p 3370 2285 V 349 2398 V 783 2398 V
836 2364 a(M-B&C)1150 2331 y Fb(\003)p 1239 2398 V 1378
2364 a Fa(73929)p 1655 2398 V 151 w(74634)p 2031 2398
V 151 w(11325)p 2407 2398 V 266 w(3600)p 2853 2398 V
292 w(16488)p 3370 2398 V 349 2511 V 783 2511 V 836 2477
a(B&C)p 1239 2511 V 341 w(73931)p 1655 2511 V 151 w(74634)p
2031 2511 V 151 w(20278)p 2407 2511 V 266 w(2792)p 2853
2511 V 247 w(818711)p 3370 2511 V 349 2623 V 783 2623
V 836 2590 a(BCP)p 1239 2623 V 350 w(73889)p 1655 2623
V 151 w(74634)p 2031 2623 V 151 w(80533)p 2407 2623 V
266 w(3960)p 2853 2623 V 201 w(2093196)p 3370 2623 V
349 2627 3025 4 v 349 2740 4 113 v 402 2932 a(tr12-30)p
783 2740 V 836 2706 a(b)r(c-pro)r(d)1144 2673 y Fb(\003)p
1239 2740 V 1333 2706 a Fa(130177)p 1655 2740 V 105 w(130639)p
2031 2740 V 106 w(193700)p 2407 2740 V 267 w(3600)p 2853
2740 V 338 w(1411)p 3370 2740 V 349 2853 V 783 2853 V
836 2819 a(M-C&B)1150 2786 y Fb(\003)p 1239 2853 V 1333
2819 a Fa(130292)p 1655 2853 V 105 w(130612)p 2031 2853
V 152 w(43700)p 2407 2853 V 266 w(3600)p 2853 2853 V
383 w(974)p 3370 2853 V 349 2965 V 783 2965 V 836 2932
a(M-B&C)1150 2899 y Fb(\003)p 1239 2965 V 1333 2932 a
Fa(130292)p 1655 2965 V 105 w(130617)p 2031 2965 V 197
w(2550)p 2407 2965 V 266 w(3600)p 2853 2965 V 292 w(11728)p
3370 2965 V 349 3078 V 783 3078 V 836 3045 a(B&C)p 1239
3078 V 296 w(130292)p 1655 3078 V 105 w(130596)p 2031
3078 V 152 w(11713)p 2407 3078 V 266 w(3854)p 2853 3078
V 247 w(689673)p 3370 3078 V 349 3191 V 783 3191 V 836
3157 a(BCP)p 1239 3191 V 305 w(130245)p 1655 3191 V 105
w(130596)p 2031 3191 V 152 w(19041)p 2407 3191 V 266
w(1945)p 2853 3191 V 247 w(729866)p 3370 3191 V 349 3195
3025 4 v 349 3308 4 113 v 402 3499 a(tr24-15)p 783 3308
V 836 3274 a(b)r(c-pro)r(d)1144 3241 y Fb(\003)p 1239
3308 V 1333 3274 a Fa(136366)p 1655 3308 V 105 w(136537)p
2031 3308 V 106 w(255700)p 2407 3308 V 267 w(3600)p 2853
3308 V 338 w(1071)p 3370 3308 V 349 3420 V 783 3420 V
836 3387 a(M-C&B)1150 3354 y Fb(\003)p 1239 3420 V 1333
3387 a Fa(136388)p 1655 3420 V 105 w(136509)p 2031 3420
V 106 w(103925)p 2407 3420 V 267 w(3600)p 2853 3420 V
383 w(809)p 3370 3420 V 349 3533 V 783 3533 V 836 3499
a(M-B&C)1150 3466 y Fb(\003)p 1239 3533 V 1333 3499 a
Fa(136388)p 1655 3533 V 105 w(136537)p 2031 3533 V 152
w(10500)p 2407 3533 V 266 w(3600)p 2853 3533 V 292 w(13097)p
3370 3533 V 349 3646 V 783 3646 V 836 3612 a(B&C)p 1239
3646 V 296 w(136389)p 1655 3646 V 105 w(136509)p 2031
3646 V 197 w(9390)p 2407 3646 V 266 w(2610)p 2853 3646
V 247 w(359935)p 3370 3646 V 349 3759 V 783 3759 V 836
3725 a(BCP)p 1239 3759 V 305 w(136374)p 1655 3759 V 105
w(136509)p 2031 3759 V 152 w(22083)p 2407 3759 V 266
w(1442)p 2853 3759 V 247 w(445522)p 3370 3759 V 349 3762
3025 4 v 349 3875 4 113 v 402 4067 a(tr24-30)p 783 3875
V 836 3842 a(b)r(c-pro)r(d)1144 3809 y Fb(\003)p 1239
3875 V 1333 3842 a Fa(287753)p 1655 3875 V 105 w(287998)p
2031 3875 V 152 w(76500)p 2407 3875 V 266 w(3600)p 2853
3875 V 338 w(2906)p 3370 3875 V 349 3988 V 783 3988 V
836 3954 a(M-C&B)1150 3921 y Fb(\003)p 1239 3988 V 1333
3954 a Fa(287811)p 1655 3988 V 105 w(287944)p 2031 3988
V 197 w(9850)p 2407 3988 V 266 w(3600)p 2853 3988 V 338
w(1978)p 3370 3988 V 349 4101 V 783 4101 V 836 4067 a(M-B&C)1150
4034 y Fb(\003)p 1239 4101 V 1333 4067 a Fa(287811)p
1655 4101 V 105 w(287942)p 2031 4101 V 197 w(2250)p 2407
4101 V 266 w(3600)p 2853 4101 V 338 w(6888)p 3370 4101
V 349 4214 V 783 4214 V 836 4180 a(B&C)p 1239 4214 V
296 w(287811)p 1655 4214 V 105 w(287929)p 2031 4214 V
152 w(11689)p 2407 4214 V 266 w(8317)p 2853 4214 V 247
w(524068)p 3370 4214 V 349 4327 V 783 4327 V 836 4293
a(BCP)p 1239 4327 V 305 w(287777)p 1655 4327 V 105 w(287929)p
2031 4327 V 152 w(24755)p 2407 4327 V 266 w(2955)p 2853
4327 V 247 w(598234)p 3370 4327 V 349 4330 3025 4 v 257
4498 a Fd(T)-8 b(able)31 b(27:)42 b(Results)32 b(from)e(the)h
(literature.)42 b(M-B&C,)31 b(M-C&B)g(are)f(from)g([MNS)3284
4462 y Fc(+)3344 4498 y Fd(00)o(],)257 4618 y(b)s(c-pro)s(d)47
b(results)h(are)f(from)f(the)i(same)f(pap)s(er)g(where)h(the)g
(implemen)m(tation)g(from)257 4739 y([BW00])33 b(is)g(used.)45
b(B&C)33 b(and)g(BCP)h(are)e(our)h(implemen)m(tations.)45
b(Instances)34 b(mark)m(ed)257 4859 y(with)486 4823 y
Fb(\003)564 4859 y Fd(timed)39 b(out.)62 b(The)40 b(M-B&C,)f(M-C&B,)g
(and)g(b)s(c-pro)s(d)f(tests)i(w)m(ere)g(run)f(on)g(a)257
4979 y(350MHz)26 b(system,)j(while)d(B&C)h(and)e(BCP)i(tests)f(w)m(ere)
h(run)f(on)g(a)f(3GHz)h(system.)42 b(Due)257 5100 y(to)32
b(comparison)h(di\016culties)h(the)f(b)s(est)g(algorithm)e(will)i(not)f
(b)s(e)h(mark)m(ed)g(with)g(b)s(old.)p Black Black 1564
5658 a(P)m(age)g(97)f(of)g(132)p Black eop end
%%Page: 106 2
TeXDict begin 106 1 bop Black 257 250 a Fd(A)33 b(BCP)g(Algorithm)f
(for)g(MCLS)1240 b(No)m(v)m(em)m(b)s(er)34 b(2,)e(2007)p
257 290 3238 4 v Black Black 288 907 3146 4 v 288 1020
4 113 v 342 986 a Fa(Instance)p 722 1020 V 102 w(Co)r(de)p
1139 1020 V 214 w(Time)e(\(s\))p 1586 1020 V 133 w(No)r(des)p
1962 1020 V 104 w(Gap)g(\(\045\))p 2408 1020 V 103 w(Ro)r(ot)i(gap)f
(\(\045\))p 3055 1020 V 243 w(UB)p 3431 1020 V 288 1024
3146 4 v 288 1044 V 288 1156 4 113 v 342 1348 a(xtr6-15)p
722 1156 V 775 1123 a(B&C)p 1139 1156 V 424 w(730)p 1586
1156 V 150 w(17129)p 1962 1156 V 287 w(0.00)p 2408 1156
V 441 w(14.77)p 3055 1156 V 196 w(5170)p 3431 1156 V
288 1269 V 722 1269 V 775 1235 a(BCP)p 1139 1269 V 387
w(3600)p 1586 1269 V 151 w(10644)p 1962 1269 V 287 w(6.72)p
2408 1269 V 441 w(18.43)p 3055 1269 V 196 w(5170)p 3431
1269 V 288 1382 V 722 1382 V 775 1348 a(b)r(c-pro)r(d)p
1139 1382 V 271 w(3600)p 1586 1382 V 105 w(491400)p 1962
1382 V 288 w(3.90)p 2408 1382 V 441 w(22.21)p 3055 1382
V 196 w(5210)p 3431 1382 V 288 1495 V 722 1495 V 775
1461 a(M-C&B)p 1139 1495 V 265 w(1622)p 1586 1495 V 105
w(232697)p 1962 1495 V 288 w(0.00)p 2408 1495 V 441 w(14.72)p
3055 1495 V 196 w(5170)p 3431 1495 V 288 1608 V 722 1608
V 775 1574 a(M-B&C)p 1139 1608 V 265 w(1121)p 1586 1608
V 151 w(24185)p 1962 1608 V 287 w(0.00)p 2408 1608 V
441 w(14.72)p 3055 1608 V 196 w(5170)p 3431 1608 V 288
1611 3146 4 v 288 1724 4 113 v 342 1916 a(xtr6-30)p 722
1724 V 775 1690 a(B&C)p 1139 1724 V 378 w(3600)p 1586
1724 V 151 w(39718)p 1962 1724 V 241 w(10.63)p 2408 1724
V 442 w(18.06)p 3055 1724 V 196 w(8012)p 3431 1724 V
288 1837 V 722 1837 V 775 1803 a(BCP)p 1139 1837 V 387
w(3608)p 1586 1837 V 241 w(460)p 1962 1837 V 241 w(22.26)p
2408 1837 V 442 w(26.34)p 3055 1837 V 196 w(8463)p 3431
1837 V 288 1950 V 722 1950 V 775 1916 a(b)r(c-pro)r(d)p
1139 1950 V 271 w(3600)p 1586 1950 V 105 w(400000)p 1962
1950 V 242 w(18.71)p 2408 1950 V 442 w(27.09)p 3055 1950
V 196 w(8067)p 3431 1950 V 288 2063 V 722 2063 V 775
2029 a(M-C&B)p 1139 2063 V 265 w(3600)p 1586 2063 V 105
w(185475)p 1962 2063 V 242 w(10.32)p 2408 2063 V 442
w(16.26)p 3055 2063 V 196 w(7880)p 3431 2063 V 288 2176
V 722 2176 V 775 2142 a(M-B&C)p 1139 2176 V 265 w(3600)p
1586 2176 V 151 w(27625)p 1962 2176 V 241 w(10.21)p 2408
2176 V 442 w(16.73)p 3055 2176 V 196 w(7925)p 3431 2176
V 288 2179 3146 4 v 288 2292 4 113 v 342 2484 a(xtr12-15)p
722 2292 V 775 2258 a(B&C)p 1139 2292 V 378 w(3600)p
1586 2292 V 151 w(29320)p 1962 2292 V 241 w(25.09)p 2408
2292 V 442 w(34.76)p 3055 2292 V 105 w(837979)p 3431
2292 V 288 2405 V 722 2405 V 775 2371 a(BCP)p 1139 2405
V 387 w(3600)p 1586 2405 V 151 w(13914)p 1962 2405 V
241 w(33.54)p 2408 2405 V 442 w(33.54)p 3055 2405 V 105
w(817508)p 3431 2405 V 288 2518 V 722 2518 V 775 2484
a(b)r(c-pro)r(d)p 1139 2518 V 271 w(3600)p 1586 2518
V 105 w(339600)p 1962 2518 V 242 w(11.27)p 2408 2518
V 442 w(12.93)p 3055 2518 V 196 w(8036)p 3431 2518 V
288 2631 V 722 2631 V 775 2597 a(M-C&B)p 1139 2631 V
265 w(3600)p 1586 2631 V 105 w(214000)p 1962 2631 V 288
w(8.61)p 2408 2631 V 441 w(10.29)p 3055 2631 V 196 w(7889)p
3431 2631 V 288 2744 V 722 2744 V 775 2710 a(M-B&C)p
1139 2744 V 265 w(3600)p 1586 2744 V 151 w(11775)p 1962
2744 V 287 w(8.71)p 2408 2744 V 441 w(10.26)p 3055 2744
V 196 w(7886)p 3431 2744 V 288 2747 3146 4 v 288 2860
4 113 v 342 3052 a(xtr12-30)p 722 2860 V 775 2826 a(B&C)p
1139 2860 V 378 w(3600)p 1586 2860 V 151 w(13508)p 1962
2860 V 241 w(11.45)p 2408 2860 V 442 w(12.74)p 3055 2860
V 151 w(15276)p 3431 2860 V 288 2973 V 722 2973 V 775
2939 a(BCP)p 1139 2973 V 387 w(3601)p 1586 2973 V 196
w(1211)p 1962 2973 V 241 w(13.61)p 2408 2973 V 442 w(14.34)p
3055 2973 V 151 w(15429)p 3431 2973 V 288 3086 V 722
3086 V 775 3052 a(b)r(c-pro)r(d)p 1139 3086 V 271 w(3600)p
1586 3086 V 105 w(208100)p 1962 3086 V 242 w(10.92)p
2408 3086 V 442 w(11.98)p 3055 3086 V 151 w(14950)p 3431
3086 V 288 3199 V 722 3199 V 775 3165 a(M-C&B)p 1139
3199 V 265 w(3600)p 1586 3199 V 151 w(79400)p 1962 3199
V 287 w(9.04)p 2408 3199 V 441 w(10.10)p 3055 3199 V
151 w(14835)p 3431 3199 V 288 3312 V 722 3312 V 775 3278
a(M-B&C)p 1139 3312 V 265 w(3600)p 1586 3312 V 196 w(4375)p
1962 3312 V 287 w(8.97)p 2408 3312 V 487 w(9.88)p 3055
3312 V 150 w(14799)p 3431 3312 V 288 3315 3146 4 v 288
3428 4 113 v 342 3620 a(xtr24-15)p 722 3428 V 775 3394
a(B&C)p 1139 3428 V 378 w(3600)p 1586 3428 V 196 w(7774)p
1962 3428 V 287 w(2.87)p 2408 3428 V 487 w(3.53)p 3055
3428 V 150 w(14163)p 3431 3428 V 288 3541 V 722 3541
V 775 3507 a(BCP)p 1139 3541 V 387 w(3600)p 1586 3541
V 196 w(7552)p 1962 3541 V 287 w(2.04)p 2408 3541 V 487
w(2.66)p 3055 3541 V 150 w(14008)p 3431 3541 V 288 3654
V 722 3654 V 775 3620 a(b)r(c-pro)r(d)p 1139 3654 V 271
w(3600)p 1586 3654 V 105 w(167700)p 1962 3654 V 288 w(2.77)p
2408 3654 V 487 w(3.29)p 3055 3654 V 150 w(14094)p 3431
3654 V 288 3767 V 722 3767 V 775 3733 a(M-C&B)p 1139
3767 V 265 w(3600)p 1586 3767 V 151 w(41525)p 1962 3767
V 287 w(2.72)p 2408 3767 V 487 w(3.24)p 3055 3767 V 150
w(14120)p 3431 3767 V 288 3880 V 722 3880 V 775 3846
a(M-B&C)p 1139 3880 V 265 w(3600)p 1586 3880 V 196 w(2925)p
1962 3880 V 287 w(3.56)p 2408 3880 V 487 w(3.97)p 3055
3880 V 150 w(14228)p 3431 3880 V 288 3883 3146 4 v 288
3996 4 113 v 342 4188 a(xtr24-30)p 722 3996 V 775 3962
a(B&C)p 1139 3996 V 378 w(3600)p 1586 3996 V 196 w(5195)p
1962 3996 V 241 w(11.92)p 2408 3996 V 442 w(12.22)p 3055
3996 V 151 w(19820)p 3431 3996 V 288 4109 V 722 4109
V 775 4075 a(BCP)p 1139 4109 V 387 w(3605)p 1586 4109
V 241 w(965)p 1962 4109 V 241 w(12.08)p 2408 4109 V 442
w(12.32)p 3055 4109 V 151 w(19791)p 3431 4109 V 288 4222
V 722 4222 V 775 4188 a(b)r(c-pro)r(d)p 1139 4222 V 271
w(3600)p 1586 4222 V 105 w(100300)p 1962 4222 V 288 w(8.49)p
2408 4222 V 487 w(8.79)p 3055 4222 V 150 w(19007)p 3431
4222 V 288 4335 V 722 4335 V 775 4301 a(M-C&B)p 1139
4335 V 265 w(3600)p 1586 4335 V 151 w(41800)p 1962 4335
V 287 w(9.52)p 2408 4335 V 487 w(9.80)p 3055 4335 V 150
w(19289)p 3431 4335 V 288 4447 V 722 4447 V 775 4414
a(M-B&C)p 1139 4447 V 265 w(3600)p 1586 4447 V 196 w(3175)p
1962 4447 V 241 w(12.12)p 2408 4447 V 442 w(12.38)p 3055
4447 V 151 w(19856)p 3431 4447 V 288 4451 3146 4 v 257
4618 a Fd(T)-8 b(able)44 b(32:)65 b(M-B&C,)44 b(M-C&B)g(are)f(from)g
([MNS)2172 4582 y Fc(+)2232 4618 y Fd(00],)j(b)s(c-pro)s(d)d(results)h
(are)g(from)257 4739 y(the)c(same)g(pap)s(er)f(where)i(the)f(implemen)m
(tation)g(from)f([BW00])g(is)h(used.)65 b(Only)40 b(the)257
4859 y(xtr6-15)28 b(instance)i(did)g(not)f(time)g(out)g(for)g(all)g
(tests.)43 b(Due)29 b(to)f(comparison)i(di\016culties)257
4979 y(the)j(b)s(est)g(algorithm)f(will)h(not)f(b)s(e)g(mark)m(ed)i
(with)f(b)s(old.)p Black Black 1540 5658 a(P)m(age)g(106)f(of)f(132)p
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
